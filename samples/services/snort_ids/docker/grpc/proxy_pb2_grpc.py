# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import proxy_pb2 as proxy__pb2


class ControllerStub(object):
  """The controller service definition.
  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.ModifyConfig = channel.unary_unary(
        '/proxy.Controller/ModifyConfig',
        request_serializer=proxy__pb2.AddConfig.SerializeToString,
        response_deserializer=proxy__pb2.ProxyReply.FromString,
        )
    self.ProcessAlerts = channel.unary_unary(
        '/proxy.Controller/ProcessAlerts',
        request_serializer=proxy__pb2.AlertMessage.SerializeToString,
        response_deserializer=proxy__pb2.ProxyReply.FromString,
        )


class ControllerServicer(object):
  """The controller service definition.
  """

  def ModifyConfig(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def ProcessAlerts(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_ControllerServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'ModifyConfig': grpc.unary_unary_rpc_method_handler(
          servicer.ModifyConfig,
          request_deserializer=proxy__pb2.AddConfig.FromString,
          response_serializer=proxy__pb2.ProxyReply.SerializeToString,
      ),
      'ProcessAlerts': grpc.unary_unary_rpc_method_handler(
          servicer.ProcessAlerts,
          request_deserializer=proxy__pb2.AlertMessage.FromString,
          response_serializer=proxy__pb2.ProxyReply.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'proxy.Controller', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
