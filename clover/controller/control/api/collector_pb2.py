# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: collector.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='collector.proto',
  package='collector',
  syntax='proto3',
  serialized_pb=_b('\n\x0f\x63ollector.proto\x12\tcollector\"B\n\x0f\x43onfigCassandra\x12\x17\n\x0f\x63\x61ssandra_hosts\x18\x01 \x01(\t\x12\x16\n\x0e\x63\x61ssandra_port\x18\x02 \x01(\x05\"\x85\x01\n\x0f\x43onfigCollector\x12\x0e\n\x06t_port\x18\x01 \x01(\t\x12\x0e\n\x06t_host\x18\x02 \x01(\t\x12\x0e\n\x06m_port\x18\x03 \x01(\t\x12\x0e\n\x06m_host\x18\x04 \x01(\t\x12\x0e\n\x06\x63_port\x18\x05 \x01(\t\x12\x0f\n\x07\x63_hosts\x18\x06 \x01(\t\x12\x11\n\tsinterval\x18\x07 \x01(\t\"K\n\x07Schemas\x12\x0f\n\x07schemas\x18\x01 \x01(\t\x12\x17\n\x0f\x63\x61ssandra_hosts\x18\x02 \x01(\t\x12\x16\n\x0e\x63\x61ssandra_port\x18\x03 \x01(\x05\"!\n\x0e\x43ollectorReply\x12\x0f\n\x07message\x18\x01 \x01(\t2\xb3\x02\n\nController\x12H\n\rStopCollector\x12\x1a.collector.ConfigCollector\x1a\x19.collector.CollectorReply\"\x00\x12I\n\x0eStartCollector\x12\x1a.collector.ConfigCollector\x1a\x19.collector.CollectorReply\"\x00\x12I\n\x0eInitVisibility\x12\x1a.collector.ConfigCassandra\x1a\x19.collector.CollectorReply\"\x00\x12\x45\n\x12TruncateVisibility\x12\x12.collector.Schemas\x1a\x19.collector.CollectorReply\"\x00\x62\x06proto3')
)




_CONFIGCASSANDRA = _descriptor.Descriptor(
  name='ConfigCassandra',
  full_name='collector.ConfigCassandra',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='cassandra_hosts', full_name='collector.ConfigCassandra.cassandra_hosts', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='cassandra_port', full_name='collector.ConfigCassandra.cassandra_port', index=1,
      number=2, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=30,
  serialized_end=96,
)


_CONFIGCOLLECTOR = _descriptor.Descriptor(
  name='ConfigCollector',
  full_name='collector.ConfigCollector',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='t_port', full_name='collector.ConfigCollector.t_port', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='t_host', full_name='collector.ConfigCollector.t_host', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='m_port', full_name='collector.ConfigCollector.m_port', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='m_host', full_name='collector.ConfigCollector.m_host', index=3,
      number=4, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='c_port', full_name='collector.ConfigCollector.c_port', index=4,
      number=5, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='c_hosts', full_name='collector.ConfigCollector.c_hosts', index=5,
      number=6, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='sinterval', full_name='collector.ConfigCollector.sinterval', index=6,
      number=7, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=99,
  serialized_end=232,
)


_SCHEMAS = _descriptor.Descriptor(
  name='Schemas',
  full_name='collector.Schemas',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='schemas', full_name='collector.Schemas.schemas', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='cassandra_hosts', full_name='collector.Schemas.cassandra_hosts', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='cassandra_port', full_name='collector.Schemas.cassandra_port', index=2,
      number=3, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=234,
  serialized_end=309,
)


_COLLECTORREPLY = _descriptor.Descriptor(
  name='CollectorReply',
  full_name='collector.CollectorReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='message', full_name='collector.CollectorReply.message', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=311,
  serialized_end=344,
)

DESCRIPTOR.message_types_by_name['ConfigCassandra'] = _CONFIGCASSANDRA
DESCRIPTOR.message_types_by_name['ConfigCollector'] = _CONFIGCOLLECTOR
DESCRIPTOR.message_types_by_name['Schemas'] = _SCHEMAS
DESCRIPTOR.message_types_by_name['CollectorReply'] = _COLLECTORREPLY
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

ConfigCassandra = _reflection.GeneratedProtocolMessageType('ConfigCassandra', (_message.Message,), dict(
  DESCRIPTOR = _CONFIGCASSANDRA,
  __module__ = 'collector_pb2'
  # @@protoc_insertion_point(class_scope:collector.ConfigCassandra)
  ))
_sym_db.RegisterMessage(ConfigCassandra)

ConfigCollector = _reflection.GeneratedProtocolMessageType('ConfigCollector', (_message.Message,), dict(
  DESCRIPTOR = _CONFIGCOLLECTOR,
  __module__ = 'collector_pb2'
  # @@protoc_insertion_point(class_scope:collector.ConfigCollector)
  ))
_sym_db.RegisterMessage(ConfigCollector)

Schemas = _reflection.GeneratedProtocolMessageType('Schemas', (_message.Message,), dict(
  DESCRIPTOR = _SCHEMAS,
  __module__ = 'collector_pb2'
  # @@protoc_insertion_point(class_scope:collector.Schemas)
  ))
_sym_db.RegisterMessage(Schemas)

CollectorReply = _reflection.GeneratedProtocolMessageType('CollectorReply', (_message.Message,), dict(
  DESCRIPTOR = _COLLECTORREPLY,
  __module__ = 'collector_pb2'
  # @@protoc_insertion_point(class_scope:collector.CollectorReply)
  ))
_sym_db.RegisterMessage(CollectorReply)



_CONTROLLER = _descriptor.ServiceDescriptor(
  name='Controller',
  full_name='collector.Controller',
  file=DESCRIPTOR,
  index=0,
  options=None,
  serialized_start=347,
  serialized_end=654,
  methods=[
  _descriptor.MethodDescriptor(
    name='StopCollector',
    full_name='collector.Controller.StopCollector',
    index=0,
    containing_service=None,
    input_type=_CONFIGCOLLECTOR,
    output_type=_COLLECTORREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='StartCollector',
    full_name='collector.Controller.StartCollector',
    index=1,
    containing_service=None,
    input_type=_CONFIGCOLLECTOR,
    output_type=_COLLECTORREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='InitVisibility',
    full_name='collector.Controller.InitVisibility',
    index=2,
    containing_service=None,
    input_type=_CONFIGCASSANDRA,
    output_type=_COLLECTORREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='TruncateVisibility',
    full_name='collector.Controller.TruncateVisibility',
    index=3,
    containing_service=None,
    input_type=_SCHEMAS,
    output_type=_COLLECTORREPLY,
    options=None,
  ),
])
_sym_db.RegisterServiceDescriptor(_CONTROLLER)

DESCRIPTOR.services_by_name['Controller'] = _CONTROLLER

# @@protoc_insertion_point(module_scope)
