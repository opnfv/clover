# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import collector_pb2 as collector__pb2


class ControllerStub(object):
  """The controller service definition.
  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.StopCollector = channel.unary_unary(
        '/collector.Controller/StopCollector',
        request_serializer=collector__pb2.ConfigCollector.SerializeToString,
        response_deserializer=collector__pb2.CollectorReply.FromString,
        )
    self.StartCollector = channel.unary_unary(
        '/collector.Controller/StartCollector',
        request_serializer=collector__pb2.ConfigCollector.SerializeToString,
        response_deserializer=collector__pb2.CollectorReply.FromString,
        )
    self.InitVisibility = channel.unary_unary(
        '/collector.Controller/InitVisibility',
        request_serializer=collector__pb2.ConfigCassandra.SerializeToString,
        response_deserializer=collector__pb2.CollectorReply.FromString,
        )
    self.TruncateVisibility = channel.unary_unary(
        '/collector.Controller/TruncateVisibility',
        request_serializer=collector__pb2.Schemas.SerializeToString,
        response_deserializer=collector__pb2.CollectorReply.FromString,
        )


class ControllerServicer(object):
  """The controller service definition.
  """

  def StopCollector(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def StartCollector(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def InitVisibility(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def TruncateVisibility(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_ControllerServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'StopCollector': grpc.unary_unary_rpc_method_handler(
          servicer.StopCollector,
          request_deserializer=collector__pb2.ConfigCollector.FromString,
          response_serializer=collector__pb2.CollectorReply.SerializeToString,
      ),
      'StartCollector': grpc.unary_unary_rpc_method_handler(
          servicer.StartCollector,
          request_deserializer=collector__pb2.ConfigCollector.FromString,
          response_serializer=collector__pb2.CollectorReply.SerializeToString,
      ),
      'InitVisibility': grpc.unary_unary_rpc_method_handler(
          servicer.InitVisibility,
          request_deserializer=collector__pb2.ConfigCassandra.FromString,
          response_serializer=collector__pb2.CollectorReply.SerializeToString,
      ),
      'TruncateVisibility': grpc.unary_unary_rpc_method_handler(
          servicer.TruncateVisibility,
          request_deserializer=collector__pb2.Schemas.FromString,
          response_serializer=collector__pb2.CollectorReply.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'collector.Controller', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
